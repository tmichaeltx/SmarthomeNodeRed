[{"id":"2b2a4010.a6b5e","type":"tab","label":"Triggerable Flows","disabled":false,"info":""},{"id":"54cae49c.6ee04c","type":"tab","label":"Recurring Flow Triggers","disabled":false,"info":""},{"id":"db3a486d.c20478","type":"subflow","name":"Dimmer Settings","info":"","category":"","in":[{"x":400,"y":80,"wires":[{"id":"f2650446.2a56d8"}]}],"out":[{"x":620,"y":80,"wires":[{"id":"f2650446.2a56d8","port":0}]}],"env":[{"name":"Step","type":"num","value":"30"}],"color":"#3FADB5","icon":"node-red/cog.svg"},{"id":"250ecbce.340264","type":"subflow","name":"Read Spreadsheet For Details","info":"","category":"","in":[{"x":40,"y":20,"wires":[{"id":"7115886d.01af18"}]}],"out":[{"x":960,"y":60,"wires":[{"id":"33cf6aac.eabb16","port":0}]},{"x":960,"y":140,"wires":[{"id":"d91779c2.896ea8","port":0}]},{"x":960,"y":220,"wires":[{"id":"46c25d0f.563a44","port":0}]},{"x":960,"y":300,"wires":[{"id":"893d102e.47b92","port":0}]},{"x":960,"y":380,"wires":[{"id":"c62b3213.e206a","port":0}]},{"x":960,"y":460,"wires":[{"id":"c9c7210d.d881f","port":0}]},{"x":960,"y":540,"wires":[{"id":"9cabee41.a056b","port":0}]},{"x":960,"y":620,"wires":[{"id":"be5dfe12.c99f2","port":0}]}],"env":[{"name":"Spreadsheet ID","type":"str","value":"","ui":{"icon":"font-awesome/fa-file-excel-o","type":"input","opts":{"types":["str"]}}},{"name":"TabName","type":"str","value":"","ui":{"icon":"font-awesome/fa-table","label":{"en-US":"Tab"},"type":"input","opts":{"types":["str"]}}},{"name":"ColStart","type":"str","value":"A","ui":{"icon":"font-awesome/fa-columns","type":"input","opts":{"types":["str"]}}},{"name":"ColEnd","type":"str","value":"Z","ui":{"icon":"font-awesome/fa-columns","type":"input","opts":{"types":["str"]}}},{"name":"MinRow","type":"num","value":"1","ui":{"icon":"font-awesome/fa-window-minimize","type":"input","opts":{"types":["num"]}}},{"name":"MaxRow","type":"num","value":"1000","ui":{"icon":"font-awesome/fa-window-maximize","type":"input","opts":{"types":["num"]}}},{"name":"OverrideEnvVariables","type":"bool","value":"false"}],"color":"#0cad0c","outputLabels":["Error","Last Populated Row","First Empty Row","Last Populated Column","First Empty Column","Spreadsheet Array","Full Data","Full Data with Inputs"],"icon":"font-awesome/fa-file-excel-o"},{"id":"711cdb94.5b9a04","type":"subflow","name":"Decide Quality of Ping","info":"","category":"Abandoned Subflows","in":[{"x":40,"y":100,"wires":[{"id":"5117f3ab.9484cc"}]}],"out":[],"env":[],"color":"#FDF0C2"},{"id":"76e3605b.0e6e7","type":"subflow","name":"Process Ping Results To Local Files","info":"","category":"","in":[{"x":20,"y":140,"wires":[{"id":"7c6b7df4.a02714"}]}],"out":[],"env":[],"color":"#0cad0c"},{"id":"aba876af.3a45e8","type":"subflow","name":"Ping, Write Down to Google and send Result to Process Ping Results","info":"","category":"","in":[{"x":20,"y":100,"wires":[{"id":"81b5485a.3abc58"}]}],"out":[],"env":[],"color":"#C7E9C0"},{"id":"c3686304.f6d31","type":"subflow","name":"Backup all 4 Hubitats using Bash Script","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"dae3700e.3752"}]}],"out":[],"env":[],"color":"#0cad0c"},{"id":"a26635c4.6027a8","type":"hubitat config","z":"","name":"Main Hubitat","usetls":false,"host":"192.168.86.110","port":"80","token":"79eb990f-05f6-4f92-b9ee-ff39db572caf","appId":"646","nodeRedServer":"http://192.168.86.1:1980","webhookPath":"/hubitat/webhook"},{"id":"bb5b26fe.1fc278","type":"gauth","z":""},{"id":"2f23f49.924a10c","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Mike's ProductionNode-RED Dashboard","hideToolbar":"true","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"3ce7ceed.69be02","type":"homekit-bridge","z":"","bridgeName":"Mike","pinCode":"121-01-707","port":"","allowInsecureRequest":false,"manufacturer":"TMS Industries","model":"1","serialNo":"1","customMdnsConfig":false,"mdnsMulticast":true,"mdnsInterface":"","mdnsPort":"","mdnsIp":"","mdnsTtl":"","mdnsLoopback":true,"mdnsReuseAddr":true,"allowMessagePassthrough":true},{"id":"ccfa4a62.450f58","type":"harmonyws-server","z":"","name":"Living Room Harmony Hub","ip":"192.168.86.102","debug":true},{"id":"8cdb6014.0e216","type":"ui_tab","z":"","name":"Stat","icon":"dashboard"},{"id":"a5bf81ee.27852","type":"mqtt-broker","z":"","name":"MQTT Docker","broker":"192.168.86.3","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"d417815c.8097e","type":"hb-conf","z":"","username":"121-01-707"},{"id":"adb4e9b8.8beee8","type":"gauth","z":""},{"id":"430b7850.44c1a8","type":"influxdb","z":"","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"MikeTestFromNR","name":"","usetls":false,"tls":""},{"id":"f2650446.2a56d8","type":"function","z":"db3a486d.c20478","name":"Step","func":"var x = env.get(\"Step\"); \nflow.set(\"$parent.Step\", x);\n\nmsg.payload = \"Your brightness increment has been set to: \" + x;\n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":80,"wires":[[]]},{"id":"7115886d.01af18","type":"function","z":"250ecbce.340264","name":"Set Read Col","func":"//Read subflow input variables\nif (env.get(\"OverrideEnvVariables\")){\n    //Put inputs and read values into msg properties to be visible downstream\n    msg.sheet = msg.SpreadsheetID;\n    msg.tab = msg.Tab;\n    msg.cellstart = msg.ColStart + msg.MinRow;\n    msg.cellend = msg.ColEnd + msg.MaxRow;\n    msg.targetrange = msg.tab+\"!\"+msg.cellstart+\":\"+msg.cellend\n    msg.topic = msg.targetrange\n    delete msg.Tab\n    delete msg.SpreadsheetID\n    delete msg.ColStart\n    delete msg.ColEnd\n    delete msg.MinRow\n    delete msg.MaxRow\n    delete msg.IgnoreEnvVar\n}else if (msg.IgnoreEnvVar) {\n    //Put inputs and read values into msg properties to be visible downstream\n    msg.sheet = msg.SpreadsheetID;\n    msg.tab = msg.Tab;\n    msg.cellstart = msg.ColStart + msg.MinRow;\n    msg.cellend = msg.ColEnd + msg.MaxRow;\n    msg.targetrange = msg.tab+\"!\"+msg.cellstart+\":\"+msg.cellend\n    msg.topic = msg.targetrange\n    delete msg.Tab\n    delete msg.SpreadsheetID\n    delete msg.ColStart\n    delete msg.ColEnd\n    delete msg.MinRow\n    delete msg.MaxRow\n    delete msg.IgnoreEnvVar\n}else{\n    var ColStart = env.get(\"ColStart\");\n    var ColEnd = env.get(\"ColEnd\");\n    var FirstRow = env.get(\"MinRow\");\n    var LastRow = env.get(\"MaxRow\");\n    //Put inputs and read values into msg properties to be visible downstream\n    msg.sheet = env.get(\"Spreadsheet ID\");\n    msg.tab = env.get(\"TabName\");\n    msg.cellstart = ColStart + FirstRow\n    msg.cellend = ColEnd + LastRow\n    msg.targetrange = msg.tab+\"!\"+msg.cellstart+\":\"+msg.cellend\n    msg.topic = msg.targetrange\n}\nreturn msg;","outputs":1,"noerr":0,"x":150,"y":20,"wires":[["f19af657.19fe88","cdae2d80.8d615"]]},{"id":"f19af657.19fe88","type":"GSheet","z":"250ecbce.340264","creds":"bb5b26fe.1fc278","method":"get","action":"","sheet":"","cells":"","name":"Read Input from GSheet","x":410,"y":20,"wires":[["b11f8aff.9aee68"]]},{"id":"8740490b.77e458","type":"comment","z":"250ecbce.340264","name":"Error","info":"","x":990,"y":20,"wires":[]},{"id":"6af56d08.1ec794","type":"comment","z":"250ecbce.340264","name":"Last Populated Row","info":"","x":1030,"y":100,"wires":[]},{"id":"be5dfe12.c99f2","type":"function","z":"250ecbce.340264","name":"Work In Progress","func":"\n/*\n * Actual good responses\n */\nmsg.LastPopulatedRow = msg.payload.length + env.get(\"MinRow\") - 1\nmsg.FirstEmptyRow = msg.LastPopulatedRow + 1\n/*\n * Placeholder/Fake Testing variables\n */\nvar colCount = 1 //number of columns wide from the data retrieved. This will eventually be replace by logic that loops through array find the max width for any given row\nvar sheetdata = msg.payload //this is the data that is returned from Google that will then be examined\n\n\n// Deletable msg.arraysize = msg.payload.length\nfor (index = 0; index < sheetdata.length; index++) {\n    if (Array.isArray(sheetdata[index])){\n        colCount = Math.max(colCount, sheetdata[index].length)\n        // Deletable msg.arrayfound = sheetdata[index].length\n    }\n    // Deletable msg.arrayfound = sheetdata[1].length\n} \n//deletable var fCol = \"aa\" // Test input column that will later be removed leaving in place\n/*\n *Column response calculation variables\n */\nvar fCol = env.get(\"ColStart\")\nvar fColTotal = 0 //to hold the column number\nvar nCol = \"\"   //nCol is new column\nvar lCol = \"\"   //lCol is last column in the range (to be populated from the actual Gsheet calls data)\n// Deletable var fCharFCol = fCol.charCodeAt(fCol.length - 1)   // fCharFCol is the final character of the first column in the range  \n// Deletable var fCol = env.get(\"ColStart\")     //fCol is the first column moved into a shorter local variable \n// Deletable var fColNum = fCol.charCodeAt(fCol.length - 1) //thecchar number of the last character of the column\n// Deletable var replacementNum = fColNum + colCount - 1 //the char of the replacement letter that will turn the first populated column in to the last column\n// Deletable var excess = 0 //this will be used to figure out how far beyond the Z or z the char num is\nfCol = fCol.toUpperCase()\n\n/*\n * validate fCol (done)\n */\nvar validStartCol = false\nvalidStartCol = ((fCol.length == 1) ||\n                ((fCol.substr(0, 1).charCodeAt(0) - 64) < 9) ||\n                (((fCol.substr(0, 1).charCodeAt(0) - 64) == 9) && ((fCol.substr(1, 1).charCodeAt(0) - 64) <= 22)))\n/*\n *Column response calculations\n */\nswitch (fCol.length) {\n    case 1:\n        fColTotal = (fCol.substr(0, 1).charCodeAt(0) - 64)\n        fColTotal += colCount - 1\n        break\n    case 2:\n        fColTotal = (fCol.substr(1, 1).charCodeAt(0) - 64) + 26 * (fCol.substr(0, 1).charCodeAt(0) - 64)\n        fColTotal += colCount - 1\n        break\n    default:\n        fColTotal = -1\n}\n//Last Populated Column and First Empty Column calculation\nif ((fColTotal <= 25) && (fColTotal >= 1)) {\n    lCol = String.fromCharCode(fColTotal+64)\n    nCol = String.fromCharCode(fColTotal+65)\n} else if (fColTotal == 26) {\n    lCol = \"Z\"\n    nCol = \"AA\"\n} else if (fColTotal >= 27) {\n    lCol = String.fromCharCode((Math.floor(fColTotal / 26)) + 64) + String.fromCharCode((fColTotal % 26) + 64)\n    nCol = String.fromCharCode((Math.floor(fColTotal / 26)) + 64) + String.fromCharCode((fColTotal % 26) + 65)\n} else if (fColTotal == -1) {\n    lCol = \"Error\"\n    nCol = \"Error\"\n    //Probably worth putting real error here, but deferred\n} else if (fColTotal == 256) {\n    lCol = \"IV\"\n    nCol = \"None\"\n}\nmsg.LastPopulatedCol = lCol\nmsg.FirstEmptyCol = nCol\nmsg.SpreadsheetArray = msg.payload\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":560,"wires":[["9cabee41.a056b","d91779c2.896ea8","46c25d0f.563a44","893d102e.47b92","c62b3213.e206a","c9c7210d.d881f"]]},{"id":"95b7965d.e4b428","type":"comment","z":"250ecbce.340264","name":"First Empty Row","info":"","x":1020,"y":180,"wires":[]},{"id":"a57014a2.3e04b8","type":"comment","z":"250ecbce.340264","name":"Last Populated Column","info":"","x":1040,"y":260,"wires":[]},{"id":"485298fb.4f6858","type":"comment","z":"250ecbce.340264","name":"First Empty Column","info":"","x":1030,"y":340,"wires":[]},{"id":"a7b5845f.22c4d8","type":"comment","z":"250ecbce.340264","name":"Spreadsheet Array","info":"","x":1030,"y":420,"wires":[]},{"id":"17f3bcf9.9a03e3","type":"comment","z":"250ecbce.340264","name":"Full Data","info":"","x":1000,"y":500,"wires":[]},{"id":"ad16bbb.aa68a48","type":"comment","z":"250ecbce.340264","name":"Full Data with Inputs","info":"","x":1030,"y":580,"wires":[]},{"id":"9cabee41.a056b","type":"change","z":"250ecbce.340264","name":"Leave Outputs","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":540,"wires":[[]]},{"id":"d91779c2.896ea8","type":"change","z":"250ecbce.340264","name":"Leave Last Populated Row","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"},{"t":"delete","p":"FirstEmptyRow","pt":"msg"},{"t":"delete","p":"LastPopulatedCol","pt":"msg"},{"t":"delete","p":"FirstEmptyCol","pt":"msg"},{"t":"delete","p":"SpreadsheetArray","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"LastPopulatedRow","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":780,"y":140,"wires":[[]]},{"id":"46c25d0f.563a44","type":"change","z":"250ecbce.340264","name":"Leave First Empty Row","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"},{"t":"delete","p":"LastPopulatedRow","pt":"msg"},{"t":"delete","p":"LastPopulatedCol","pt":"msg"},{"t":"delete","p":"FirstEmptyCol","pt":"msg"},{"t":"delete","p":"SpreadsheetArray","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"FirstEmptyRow","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":220,"wires":[[]]},{"id":"893d102e.47b92","type":"change","z":"250ecbce.340264","name":"Leave Last Populated Column","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"},{"t":"delete","p":"LastPopulatedRow","pt":"msg"},{"t":"delete","p":"FirstEmptyRow","pt":"msg"},{"t":"delete","p":"FirstEmptyCol","pt":"msg"},{"t":"delete","p":"SpreadsheetArray","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"LastPopulatedCol","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":790,"y":300,"wires":[[]]},{"id":"c62b3213.e206a","type":"change","z":"250ecbce.340264","name":"Leave First Empty Column","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"},{"t":"delete","p":"LastPopulatedRow","pt":"msg"},{"t":"delete","p":"FirstEmptyRow","pt":"msg"},{"t":"delete","p":"LastPopulatedCol","pt":"msg"},{"t":"delete","p":"SpreadsheetArray","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"FirstEmptyCol","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":780,"y":380,"wires":[[]]},{"id":"c9c7210d.d881f","type":"change","z":"250ecbce.340264","name":"Leave Spreadsheet Array","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"tab","pt":"msg"},{"t":"delete","p":"sheet","pt":"msg"},{"t":"delete","p":"cellstart","pt":"msg"},{"t":"delete","p":"cellend","pt":"msg"},{"t":"delete","p":"targetrange","pt":"msg"},{"t":"delete","p":"LastPopulatedRow","pt":"msg"},{"t":"delete","p":"FirstEmptyRow","pt":"msg"},{"t":"delete","p":"LastPopulatedCol","pt":"msg"},{"t":"delete","p":"FirstEmptyCol","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"SpreadsheetArray","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":460,"wires":[[]]},{"id":"b11f8aff.9aee68","type":"function","z":"250ecbce.340264","name":"Cancel Timeout?","func":"msg.reset = true\nreturn msg;","outputs":1,"noerr":0,"x":170,"y":140,"wires":[["fa582a24.4565e8","eb587bd4.e05c58"]]},{"id":"fa582a24.4565e8","type":"trigger","z":"250ecbce.340264","op1":"","op2":"timeout","op1type":"nul","op2type":"str","duration":"10","extend":true,"units":"s","reset":"","bytopic":"all","name":"Watchdog","x":480,"y":140,"wires":[["893d102e.47b92","d91779c2.896ea8","c62b3213.e206a","c9c7210d.d881f","9cabee41.a056b"]]},{"id":"cdae2d80.8d615","type":"change","z":"250ecbce.340264","name":"","rules":[{"t":"set","p":"timeout","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":100,"wires":[["fa582a24.4565e8"]]},{"id":"eb587bd4.e05c58","type":"change","z":"250ecbce.340264","name":"","rules":[{"t":"delete","p":"reset","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":370,"y":500,"wires":[["be5dfe12.c99f2"]]},{"id":"33cf6aac.eabb16","type":"catch","z":"250ecbce.340264","name":"Catch and Relay Errors","scope":null,"uncaught":false,"x":760,"y":60,"wires":[[]]},{"id":"f9ce45cd.70d568","type":"rbe","z":"76e3605b.0e6e7","name":"Changing Ping?","func":"rbe","gap":"","start":"","inout":"out","property":"PingStatus","x":860,"y":100,"wires":[["23c83a68.f57316"]]},{"id":"54bcf469.64fc1c","type":"file","z":"76e3605b.0e6e7","name":"Append to NetUpPerpetual","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","encoding":"none","x":940,"y":220,"wires":[[]]},{"id":"800cd2f0.7e6fc","type":"simpletime","z":"76e3605b.0e6e7","name":"Populate Time Messages","x":150,"y":240,"wires":[["2224f154.3db68e"]]},{"id":"2224f154.3db68e","type":"change","z":"76e3605b.0e6e7","name":"Create Log Start line with Formated Date","rules":[{"t":"set","p":"payload","pt":"msg","to":"myyear\t&\"-\"&\tmymonthn\t&\"-\"&\tmydom\t&\" \"&\tmyhourpm\t&\":\"&\tmyminute\t&\":\"&\tmysecond\t&\".\"&\tmymillis\t&\" \"&\tmypm\t&\"          Log Start\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":440,"y":240,"wires":[["54bcf469.64fc1c","b832f02e.6f68d"]]},{"id":"7b2187a9.5139d8","type":"change","z":"76e3605b.0e6e7","name":"Get dir/file destination from Flow context","rules":[{"t":"set","p":"filename","pt":"msg","to":"$flowContext('OutputDirectory') &\tpingtarget & \".txt\"","tot":"jsonata"},{"t":"set","p":"pingtime","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":140,"wires":[["833fda41.17b198","41c7aa38.91a0b4"]]},{"id":"f1a77239.f0493","type":"comment","z":"76e3605b.0e6e7","name":"JSONata Flow context","info":"myyear&\"-\"&mymonthn&\"-\"&mydom&\" \"&myhourpm &\":\"&myminute&\":\"&mysecond&\n\".\"&mymillis\n","x":500,"y":100,"wires":[]},{"id":"38e74b76.ec65d4","type":"change","z":"76e3605b.0e6e7","name":"Failure Start time","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":150,"y":960,"wires":[["b89a96f9.f64b88","f6326890.3b8ae8","148d89ae.8a8376"]]},{"id":"c2fdf835.927178","type":"change","z":"76e3605b.0e6e7","name":"Failure End time","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":1000,"wires":[["b89a96f9.f64b88"]]},{"id":"6b07ffa.4eb28","type":"calculator","z":"76e3605b.0e6e7","name":"Calculate the difference","inputMsgField":"payload","outputMsgField":"payload","operation":"sub","constant":"","x":610,"y":1040,"wires":[["94dfb9b5.59e1a8"]]},{"id":"b89a96f9.f64b88","type":"join","z":"76e3605b.0e6e7","name":"Get start and end times","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":170,"y":1040,"wires":[["6b07ffa.4eb28"]]},{"id":"f6326890.3b8ae8","type":"delay","z":"76e3605b.0e6e7","name":"","pauseType":"random","timeout":"1300","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"milliseconds","drop":false,"x":400,"y":1000,"wires":[["c2fdf835.927178"]]},{"id":"94dfb9b5.59e1a8","type":"calculator","z":"76e3605b.0e6e7","name":"Multiply by -1 to get positive duration","inputMsgField":"payload","outputMsgField":"payload","operation":"mult","constant":"-1","x":210,"y":1080,"wires":[["2ea97499.5a805c"]]},{"id":"2ea97499.5a805c","type":"function","z":"76e3605b.0e6e7","name":"Translate Duration Function","func":"/* \n * Create Variables\n * \n */\n        var milliseconds = msg.payload;\n        var years, weeks, days, hours, minutes, seconds, millis;\n    //creating 2 string versions of each of the durations that can be in the middle of a 1:01:01.001 duration \n    //minstr is the always 2 character one\n    //lminstr is the version that can be 1 or more characers that will be used when that part is the portion of the duration\n        var minstr, secstr, millistr, lminstr, lsecstr, lmillistr;\n        var whichcomponents, readableduration;\n\n/*\n * Calculate the numbers for the subcomponents\n * \n */\n    //by getting the remainder when dividing by 1000\n    //it leaves just the fraction of milliseconds\n        millis = milliseconds % 1000;\n    //the floor function drops the decimal portion\n    //returning the non fractional seconds\n        seconds = Math.floor(milliseconds / 1000);\n    //the floor function drops the decimal portion\n    //returning the non fractional minutes\n        minutes = Math.floor(seconds / 60);\n    //Once the minutes have been calculated, then\n    //the seconds is replaced with those seconds not\n    //accounted for by the minutes\n        seconds = seconds % 60;\n    //The same sequence as used for minutes/seconds\n    //then used to calulate minutes, hours, dayss, weeks, years\n\n        hours = Math.floor(minutes / 60);\n        minutes = minutes % 60;\n        days = Math.floor(hours / 24);\n        hours = hours % 24;\n        weeks = Math.floor(days / 7)\n        days = days % 7;\n        years = Math.floor(days / 365.25)\n        weeks = weeks % 52;\n\n/*\n * Put the subcomponents into msg payloads for easy access by later nodes\n *\n */\n        msg.years = years\n        msg.weeks = weeks\n        msg.days = days\n        msg.hours = hours\n        msg.minutes = minutes\n        msg.seconds = seconds\n        msg.millis = millis\n \n\n/*\n * create the string verssion for the subcomponents\n */\n    //milliseconds\n        lmillistr = millis.toString();\n        //put padding on the milliseconds so that 1 ms shows as .001 and not .1 when concatenated after a decimal\n            millistr = millis.toString().padStart(3, \"0\");\n    //seconds\n        lsecstr = seconds.toString();\n        //put padding on the seconds so that 1 s shows as :01.000 and not :1.000 when concatenated after a dividing :\n            secstr = lsecstr.padStart(2, \"0\");\n    //minutes\n        lminstr = minutes.toString();\n        //put padding on the minutes so that 1 m shows as :01:00.000 and not :1:00.000 when concatenated after a dividing :\n            minstr = lminstr.padStart(2, \"0\");\n\n/*\n * Build output based on largest significant populated unit\n * The general rule is to include in the output the largest unit (years, weeks, days, etc) followed by the next 2\n * smaller units if the happen to be populated\n */\n    readableduration =\"\"\n//years populated\n    if (years !== 0) { \n        if (days !== 0) {\n            if (days === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(weeks.toString(), \" Week\", readableduration)\n            } else {\n                readableduration = \" \".concat(weeks.toString(), \" Weeks\", readableduration)\n            }\n        }\n        if (years === 1) {\n            readableduration = years.toString().concat(\" Year\", readableduration)\n        } else {\n            readableduration = years.toString().concat(\" Years\", readableduration)\n        }\n//weeks populated\n    } else if (weeks !== 0) {\n        if (hours !== 0) {\n            if (hours === 1) {\n                readableduration = \" \".concat(hours.toString(), \" Hour\", readableduration)\n            } else {\n                readableduration = \" \".concat(hours.toString(), \" Hours\", readableduration)\n            }\n        }\n        if (days !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks === 1) {\n            readableduration = weeks.toString().concat(\" Week\", readableduration)\n        } else {\n            readableduration = weeks.toString().concat(\" Weeks\", readableduration)\n        }\n//days populated\n    } else if (days !== 0) {\n        if ((minutes !== 0) && (hours !== 0)) { //If both are non-zero then 1:01 format. If only 1 then either 2 hours or 1 minute\n            if (minutes !== 0) {\n                readableduration = \":\".concat(minstr, readableduration)\n            }\n            if (hours !== 0) {\n                readableduration = \" \".concat(hours.toString(), readableduration)\n            } else {\n                readableduration = \" 0\".concat(readableduration)\n            }\n        } else {\n            if (minutes === 1) {\n                readableduration = \" 1 Minute\".concat(readableduration)\n            } else if (minutes > 1) {\n                readableduration = \" \".concat(lminstr,\" Minutes\", readableduration)\n            } else if (hours === 1) {\n                readableduration = \" 1 Hour\".concat(readableduration)\n            } else {\n                if (hours >1) {\n                    readableduration = \" \".concat(hours.toString(),\" Hours\", readableduration)\n                }\n            }\n        }\n        if (days === 1) {\n            readableduration = days.toString().concat(\" Day\", readableduration)\n        } else {\n            readableduration = days.toString().concat(\" Days\", readableduration)\n        }\n//hours populated\n    } else if (hours !== 0) {\n        if ((minutes !== 0) || (seconds !== 0)) { //End result h Hours or h:mm:ss\n            readableduration = hours.toString().concat(\":\", minstr, \":\", secstr, readableduration)\n        } else {\n            if (hours === 1) {\n                readableduration = \"1 Hour\"\n            } else {\n                readableduration = hours.toString().concat(\" Hours\", readableduration)\n            }\n        }\n//minutes populated\n    } else if (minutes !== 0) { //End result m Minutes or mm:ss.MMM\n        if (seconds !== 0 || millis !== 0) { //End result h Hours or h:mm:ss\n            readableduration = lminstr.concat(\":\", secstr, \".\", millistr, readableduration)\n        } else {\n            if (minutes === 1) {\n                readableduration = \"1 Minute\".concat( readableduration)\n            } else {\n                readableduration = lminstr.concat(\" Minutes\", readableduration)\n            }\n        }\n//seconds populated\n    } else if (seconds !== 0) {\n        if (millis !== 0) { //End result s Seconds or s.MMM\n            readableduration = lsecstr.concat(\".\", millistr, \" Seconds\", readableduration)\n        } else {\n            if (seconds === 1) {\n                readableduration = \"1 Second\".concat( readableduration)\n            } else {\n                readableduration = lsecstr.concat(\" Seconds\", readableduration)\n            }\n        }\n//milliseconds populated\n    } else if (millis !== 0) {\n        if (millis !== 1) {\n            readableduration = lmillistr.concat(\" Milliseconds\", readableduration)\n        } else {\n            readableduration = \"1 Millisecond\".concat( readableduration)\n        }\n    } else {\n        readableduration = \"0\"\n    }\n    msg.years = years\n    msg.weeks = weeks\n    msg.days = days\n    msg.hours = hours\n    msg.minutes = minutes\n    msg.seconds = seconds\n    msg.millis = millis\n    msg.payload = readableduration\n    return msg;","outputs":1,"noerr":0,"x":500,"y":1080,"wires":[["82c9edda.537d7"]]},{"id":"408b8df6.b9b044","type":"join","z":"76e3605b.0e6e7","name":"Join the failure start time with the duration for output","mode":"custom","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1070,"y":960,"wires":[[]]},{"id":"82c9edda.537d7","type":"function","z":"76e3605b.0e6e7","name":"Pad the text duration to 24 characters","func":"msg.payload = msg.payload.padStart(24)\nreturn msg;","outputs":1,"noerr":0,"x":801,"y":1080,"wires":[["408b8df6.b9b044"]]},{"id":"148d89ae.8a8376","type":"change","z":"76e3605b.0e6e7","name":"Create Log Start line with Formated Date","rules":[{"t":"set","p":"payload","pt":"msg","to":"myyear\t&\"-\"&\tmymonthn\t&\"-\"&\tmydom\t&\" \"&\tmyhourpm\t&\":\"&\tmyminute\t&\":\"&\tmysecond\t&\".\"&\tmymillis\t&\" \"&\tmypm","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":660,"y":960,"wires":[["408b8df6.b9b044"]]},{"id":"6e44be2e.917c7","type":"function","z":"76e3605b.0e6e7","name":"Include Ping Time if Successful","func":"if (isNaN(msg.pingtime)) {\n    msg.payload = msg.CurrentTime.padEnd(28,\" \") + msg.PingStatus.padEnd(20, \" \")\n} else {\nmsg.payload = msg.CurrentTime.padEnd(28,\" \") + msg.PingStatus.padEnd(9, \" \") + msg.pingtime.toString().padEnd(11,\" \") + msg.Min.toString().padEnd(11,\" \") + msg.Max.toString().padEnd(11,\" \") + msg.RollingAverage.toString().padEnd(11,\" \")\n}\nreturn msg;","outputs":1,"noerr":0,"x":950,"y":460,"wires":[["54bcf469.64fc1c"]]},{"id":"23c83a68.f57316","type":"simpletime","z":"76e3605b.0e6e7","name":"Populate Time Messages","x":1070,"y":60,"wires":[["8ac84738.ad8f18"]]},{"id":"8ac84738.ad8f18","type":"change","z":"76e3605b.0e6e7","name":"Formated Date for ping log entry","rules":[{"t":"set","p":"CurrentTime","pt":"msg","to":"myyear\t&\"-\"&\tmymonthn\t&\"-\"&\tmydom\t&\" \"&\tmyhourpm\t&\":\"&\tmyminute\t&\":\"&\tmysecond\t&\".\"&\tmymillis\t&\" \"&\tmypm","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1050,"y":160,"wires":[["6e44be2e.917c7"]]},{"id":"833fda41.17b198","type":"rbe","z":"76e3605b.0e6e7","name":"Only write headers first time process is initiated","func":"rbe","gap":"","start":"","inout":"out","property":"filename","x":220,"y":200,"wires":[["3a6e32fc.4a089e"]]},{"id":"41c7aa38.91a0b4","type":"delay","z":"76e3605b.0e6e7","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":700,"y":60,"wires":[["f9ce45cd.70d568","48434c5b.387c44","e6f86ef9.f3af6"]]},{"id":"7c6b7df4.a02714","type":"function","z":"76e3605b.0e6e7","name":"Update Flow Results Based on Latest Input","func":"var CurrentCount = flow.get(\"Count\")\nif (!isNaN(msg.payload)) {\n    var next = Number(msg.payload)\n    if (next === 0) {\n    } else {\n        var CurrentAvg = flow.get(\"RollingAverage\")\n        var CurrentMax = flow.get(\"Max\")\n        var CurrentMin = flow.get(\"Min\")\n        var OldMax = CurrentMax\n        var OldMin = CurrentMin\n        if (CurrentCount === 0) {\n            CurrentAvg = next;\n            CurrentMin = next;\n            CurrentMax = next;\n            CurrentCount = CurrentCount + 1\n        } else {\n            oldtotal = CurrentAvg * CurrentCount\n            newtotal = next + oldtotal\n            CurrentCount = CurrentCount + 1\n            CurrentAvg = newtotal / CurrentCount\n            CurrentMax = Math.max(next, CurrentMax)\n            if (CurrentMax != OldMax) {\n                msg.NewMax = true\n            }\n            CurrentMin = Math.min(next, CurrentMin)\n            if (CurrentMin != OldMin) {\n                msg.NewMin = true\n            }\n        }\n        flow.set(\"RollingAverage\", CurrentAvg);\n        flow.set(\"Max\", CurrentMax);\n        flow.set(\"Min\", CurrentMin);\n        flow.set(\"Count\", CurrentCount);\n        msg.next = next\n        msg.RollingAverage = CurrentAvg;\n        msg.Max = CurrentMax;\n        msg.Min = CurrentMin;\n        msg.Count = CurrentCount;\n        return msg;\n    }\n}\n","outputs":1,"noerr":0,"x":230,"y":140,"wires":[["7b2187a9.5139d8"]]},{"id":"b832f02e.6f68d","type":"function","z":"76e3605b.0e6e7","name":"--Divider","func":"var a=\"-\"\na=a.padEnd(81,\"-\")\nmsg.payload = a\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":280,"wires":[["54bcf469.64fc1c","11aeda74.2913e6"]]},{"id":"11aeda74.2913e6","type":"function","z":"76e3605b.0e6e7","name":"Send Header","func":"var a=\"\"\na = a + \"Date\".padEnd(28,\" \")+ \"Status\".padEnd(9,\" \")+ \"Roundtrip\".padEnd(11,\" \")+ \"Min\".padEnd(11,\" \")+ \"Max\".padEnd(11,\" \")+ \"Average\".padEnd(11,\" \")\nmsg.payload = a\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":320,"wires":[["54bcf469.64fc1c"]]},{"id":"3a6e32fc.4a089e","type":"function","z":"76e3605b.0e6e7","name":"===Divider","func":"var a=\"=\"\na=a.padEnd(81,\"=\")\nmsg.payload = a\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":200,"wires":[["800cd2f0.7e6fc","54bcf469.64fc1c"]]},{"id":"f97e59e9.764a98","type":"config","z":"76e3605b.0e6e7","name":"Config output directory","properties":[{"p":"OutputDirectory","pt":"flow","to":"/CS/Uptime/","tot":"str"},{"p":"Count","pt":"flow","to":"0","tot":"num"},{"p":"Min","pt":"flow","to":"None","tot":"str"},{"p":"Max","pt":"flow","to":"None","tot":"str"},{"p":"RollingAverage","pt":"flow","to":"None","tot":"str"}],"active":true,"x":140,"y":80,"wires":[],"info":"Note: by having a config node in a subflow, this sets the flow variables for when the subflow is activated. There is no way to use the click ability of a config node in a subflow, but it does do the initial population of the variable each time the subflow is triggered. In this case because the subflow is triggered via 12 different outputs, each of the 12 is a different set of the same variables."},{"id":"81c7815c.892cd","type":"config","z":"711cdb94.5b9a04","name":"Config output directory","properties":[{"p":"OutputDirectory","pt":"flow","to":"/CS/Uptime/","tot":"str"},{"p":"Count","pt":"flow","to":"0","tot":"num"},{"p":"Min","pt":"flow","to":"None","tot":"str"},{"p":"Max","pt":"flow","to":"None","tot":"str"},{"p":"RollingAverage","pt":"flow","to":"None","tot":"str"},{"p":"downcount","pt":"flow","to":"0","tot":"str"},{"p":"calculateandwriteoutage","pt":"flow","to":"false","tot":"bool"}],"active":true,"x":140,"y":240,"wires":[],"info":" * CS 192.168.86.3\r\n * G Wifi 192.168.86.1\r\n * Emby laptop 192.168.86.2\r\n * Lennox 192.168.86.101\r\n * ATT router 192.168.1.254\r\n * Cloudflare 1.1.1.1\r\n * Level 3 4.2.2.2\r\n * Google 8.8.8.8\r\n * OpenDNS 208.67.222.222\r\n * dfw25s26-in-f19.1e100.net 172.217.9.147\r\n * ghs.googlehosted.com 172.217.9.147\r\n * "},{"id":"159589d9.1135c6","type":"GSheet","z":"711cdb94.5b9a04","creds":"adb4e9b8.8beee8","method":"append","action":"","sheet":"1ZKNZWvcBqLcxkkFSrV9JN-BAeXiGoGrDjepUyD-S5Cs","cells":"Sheet1!A2:J1000","name":"","x":1137,"y":500,"wires":[[]]},{"id":"c77a0cee.02f32","type":"function","z":"711cdb94.5b9a04","name":"Examine messages for Internet vs host down","func":"if (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    if(!isNaN(downCount)){\n        if(downCount<6){ //it would be better and more elegant to have something count the number of internet targets and pass that in, but for now it is just hardcoded to 6\n            downCount++\n            if(downCount == 6) {\n                flow.set(\"wentdownat\",Date.now())\n                flow.set(\"internetdown\", true)\n            }\n        }\n        \n    }\n    flow.set(\"downcount\", downCount);\n    return msg;}","outputs":1,"noerr":0,"x":710,"y":53,"wires":[[]],"info":"This Node is triggered by a ping response of false (i.e. more than 5 seconds to respond and thus either the network or the target host is offline)\n\n * gets how many consecutive times the ping has shown as down\n * sets internet down as true\n * Makes sure the down count is a number (belt and suspenders that could almost certainly be removed\n * If it is not a number than nothing happens\n * If it is, the it checks to see if the number of down responses has reached 6. The 6 is how many internet hosts are being examined. I assume that if we reach 6 then it is the internet and not just one or more of the total hosts that are down. If it is already at 6 then the system is treating the internet as down aleady and no further action is required.\n * If it is less than 6, then the count is incremented\n * If incrementing it has now made the count 6, it then records (in epoch time) the time the count went from 5 to 6.\n * Finally it saves the count back into a flow variable.\n"},{"id":"2286604.c0f71a","type":"function","z":"711cdb94.5b9a04","name":"Time to report outage?","func":"if (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    var originalDownCount = downCount\n    flow.set(\"calculateandwriteoutage\",false)\n    if(!isNaN(downCount)){\n        if(downCount > 0){\n            downCount--\n            if(downCount === 0 && flow.get(\"internetdown\")) {\n                flow.set(\"internetdown\", false)\n                flow.set(\"cameupat\",Date.now())\n                flow.set(\"calculateandwriteoutage\",true)\n            }\n        }\n    }\n    flow.set(\"downcount\", downCount);\n    if(flow.get(\"calculateandwriteoutage\")){\n        return msg;\n        \n    }\n}","outputs":1,"noerr":0,"x":760,"y":100,"wires":[["8a0a15c8.5a92d8"]],"info":"This Node is triggered by a ping response of a number (i.e. between 1 and 4999 milliseconds for a ping response)\n\n * get how many nodes are down\n * save a copy of how many nodes are down\n * Set flow variable for whether to do a calculation and output to false by default\n * Makes sure the down count is a number (belt and suspenders that could almost certainly be removed)\n * Check if the count is greater than zero\n * If it is then decrement the count\n * check if the decremented count is 0 now and that the internetdown flag is true (this flag means the down count reached 6)\n * If it is, then the internet is up enough to then this record this as the time the internet came up and set the internetdown back to false and change the flag for whether to calculated and write the outage to Gsheet to true\n * Record the down count to the flow variable"},{"id":"cfec0785.b80348","type":"switch","z":"711cdb94.5b9a04","name":"","property":"pingtargetnum","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"},{"t":"eq","v":"5","vt":"str"},{"t":"eq","v":"6","vt":"str"},{"t":"eq","v":"7","vt":"str"},{"t":"eq","v":"8","vt":"str"},{"t":"eq","v":"9","vt":"str"},{"t":"eq","v":"10","vt":"str"},{"t":"eq","v":"11","vt":"str"},{"t":"eq","v":"12","vt":"str"}],"checkall":"false","repair":false,"outputs":12,"x":930,"y":240,"wires":[["625ab66.59d0b48"],["c5d470b0.da92f"],["469f91ba.58236"],["6caf4611.732b98"],["59014ce7.0a1b44"],["83e3d76d.17aad8"],["25747400.0795cc"],["2c8b7f98.87f3e"],["8f9ccce1.dd365"],["c8251ad6.9dcaf8"],["f54e3165.fa3b4"],["84a64174.16425"]]},{"id":"2a8bf2f.e6a000e","type":"function","z":"711cdb94.5b9a04","name":"Calculate Duration of Outage","func":"if(flow.get(\"calculateandwriteoutage\")){\n    var duration = flow.get(\"cameupat\") - flow.get(\"wentdownat\")\n    flow.set(\"calculateandwriteoutage\",false)\n    msg.payload = duration\n    return msg;\n} \n","outputs":1,"noerr":0,"x":160,"y":580,"wires":[["9a5ed7f0.5f0c68"]]},{"id":"cd0652f2.24c1b","type":"change","z":"711cdb94.5b9a04","name":"Set Ping Status Down","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Down","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":53,"wires":[["cfec0785.b80348","c77a0cee.02f32"]]},{"id":"625ab66.59d0b48","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","x":1150,"y":20,"wires":[]},{"id":"c5d470b0.da92f","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":60,"wires":[]},{"id":"469f91ba.58236","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":100,"wires":[]},{"id":"6caf4611.732b98","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":140,"wires":[]},{"id":"59014ce7.0a1b44","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":180,"wires":[]},{"id":"83e3d76d.17aad8","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":220,"wires":[]},{"id":"25747400.0795cc","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":260,"wires":[]},{"id":"2c8b7f98.87f3e","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":300,"wires":[]},{"id":"8f9ccce1.dd365","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":340,"wires":[]},{"id":"c8251ad6.9dcaf8","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":380,"wires":[]},{"id":"f54e3165.fa3b4","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1150,"y":420,"wires":[]},{"id":"84a64174.16425","type":"subflow:76e3605b.0e6e7","z":"711cdb94.5b9a04","name":"","x":1149,"y":460,"wires":[]},{"id":"286de803.dcf568","type":"change","z":"711cdb94.5b9a04","name":"Set Ping Status Good","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Good","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":100,"wires":[["cfec0785.b80348","2286604.c0f71a"]]},{"id":"3716f3a5.c360dc","type":"change","z":"711cdb94.5b9a04","name":"Set Ping Status Slow","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Slow","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":140,"wires":[["cfec0785.b80348","2286604.c0f71a"]]},{"id":"9a5ed7f0.5f0c68","type":"function","z":"711cdb94.5b9a04","name":"Translate Duration Function","func":"/* \n * Create Variables\n * \n */\n        var milliseconds = msg.payload;\n        var years, weeks, days, hours, minutes, seconds, millis;\n    //creating 2 string versions of each of the durations that can be in the middle of a 1:01:01.001 duration \n    //minstr is the always 2 character one\n    //lminstr is the version that can be 1 or more characers that will be used when that part is the portion of the duration\n        var minstr, secstr, millistr, lminstr, lsecstr, lmillistr;\n        var whichcomponents, readableduration;\n\n/*\n * Calculate the numbers for the subcomponents\n * \n */\n    //by getting the remainder when dividing by 1000\n    //it leaves just the fraction of milliseconds\n        millis = milliseconds % 1000;\n    //the floor function drops the decimal portion\n    //returning the non fractional seconds\n        seconds = Math.floor(milliseconds / 1000);\n    //the floor function drops the decimal portion\n    //returning the non fractional minutes\n        minutes = Math.floor(seconds / 60);\n    //Once the minutes have been calculated, then\n    //the seconds is replaced with those seconds not\n    //accounted for by the minutes\n        seconds = seconds % 60;\n    //The same sequence as used for minutes/seconds\n    //then used to calulate minutes, hours, dayss, weeks, years\n\n        hours = Math.floor(minutes / 60);\n        minutes = minutes % 60;\n        days = Math.floor(hours / 24);\n        hours = hours % 24;\n        weeks = Math.floor(days / 7)\n        days = days % 7;\n        years = Math.floor(days / 365.25)\n        weeks = weeks % 52;\n\n/*\n * Put the subcomponents into msg payloads for easy access by later nodes\n *\n */\n        msg.years = years\n        msg.weeks = weeks\n        msg.days = days\n        msg.hours = hours\n        msg.minutes = minutes\n        msg.seconds = seconds\n        msg.millis = millis\n \n\n/*\n * create the string verssion for the subcomponents\n */\n    //milliseconds\n        lmillistr = millis.toString();\n        //put padding on the milliseconds so that 1 ms shows as .001 and not .1 when concatenated after a decimal\n            millistr = millis.toString().padStart(3, \"0\");\n    //seconds\n        lsecstr = seconds.toString();\n        //put padding on the seconds so that 1 s shows as :01.000 and not :1.000 when concatenated after a dividing :\n            secstr = lsecstr.padStart(2, \"0\");\n    //minutes\n        lminstr = minutes.toString();\n        //put padding on the minutes so that 1 m shows as :01:00.000 and not :1:00.000 when concatenated after a dividing :\n            minstr = lminstr.padStart(2, \"0\");\n\n/*\n * Build output based on largest significant populated unit\n * The general rule is to include in the output the largest unit (years, weeks, days, etc) followed by the next 2\n * smaller units if the happen to be populated\n */\n    readableduration =\"\"\n//years populated\n    if (years !== 0) { \n        if (days !== 0) {\n            if (days === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(weeks.toString(), \" Week\", readableduration)\n            } else {\n                readableduration = \" \".concat(weeks.toString(), \" Weeks\", readableduration)\n            }\n        }\n        if (years === 1) {\n            readableduration = years.toString().concat(\" Year\", readableduration)\n        } else {\n            readableduration = years.toString().concat(\" Years\", readableduration)\n        }\n//weeks populated\n    } else if (weeks !== 0) {\n        if (hours !== 0) {\n            if (hours === 1) {\n                readableduration = \" \".concat(hours.toString(), \" Hour\", readableduration)\n            } else {\n                readableduration = \" \".concat(hours.toString(), \" Hours\", readableduration)\n            }\n        }\n        if (days !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks === 1) {\n            readableduration = weeks.toString().concat(\" Week\", readableduration)\n        } else {\n            readableduration = weeks.toString().concat(\" Weeks\", readableduration)\n        }\n//days populated\n    } else if (days !== 0) {\n        if ((minutes !== 0) && (hours !== 0)) { //If both are non-zero then 1:01 format. If only 1 then either 2 hours or 1 minute\n            if (minutes !== 0) {\n                readableduration = \":\".concat(minstr, readableduration)\n            }\n            if (hours !== 0) {\n                readableduration = \" \".concat(hours.toString(), readableduration)\n            } else {\n                readableduration = \" 0\".concat(readableduration)\n            }\n        } else {\n            if (minutes === 1) {\n                readableduration = \" 1 Minute\".concat(readableduration)\n            } else if (minutes > 1) {\n                readableduration = \" \".concat(lminstr,\" Minutes\", readableduration)\n            } else if (hours === 1) {\n                readableduration = \" 1 Hour\".concat(readableduration)\n            } else {\n                if (hours >1) {\n                    readableduration = \" \".concat(hours.toString(),\" Hours\", readableduration)\n                }\n            }\n        }\n        if (days === 1) {\n            readableduration = days.toString().concat(\" Day\", readableduration)\n        } else {\n            readableduration = days.toString().concat(\" Days\", readableduration)\n        }\n//hours populated\n    } else if (hours !== 0) {\n        if ((minutes !== 0) || (seconds !== 0)) { //End result h Hours or h:mm:ss\n            readableduration = hours.toString().concat(\":\", minstr, \":\", secstr, readableduration)\n        } else {\n            if (hours === 1) {\n                readableduration = \"1 Hour\"\n            } else {\n                readableduration = hours.toString().concat(\" Hours\", readableduration)\n            }\n        }\n//minutes populated\n    } else if (minutes !== 0) { //End result m Minutes or mm:ss.MMM\n        if (seconds !== 0 || millis !== 0) { //End result h Hours or h:mm:ss\n            readableduration = lminstr.concat(\":\", secstr, \".\", millistr, readableduration)\n        } else {\n            if (minutes === 1) {\n                readableduration = \"1 Minute\".concat( readableduration)\n            } else {\n                readableduration = lminstr.concat(\" Minutes\", readableduration)\n            }\n        }\n//seconds populated\n    } else if (seconds !== 0) {\n        if (millis !== 0) { //End result s Seconds or s.MMM\n            readableduration = lsecstr.concat(\".\", millistr, \" Seconds\", readableduration)\n        } else {\n            if (seconds === 1) {\n                readableduration = \"1 Second\".concat( readableduration)\n            } else {\n                readableduration = lsecstr.concat(\" Seconds\", readableduration)\n            }\n        }\n//milliseconds populated\n    } else if (millis !== 0) {\n        if (millis !== 1) {\n            readableduration = lmillistr.concat(\" Milliseconds\", readableduration)\n        } else {\n            readableduration = \"1 Millisecond\".concat( readableduration)\n        }\n    } else {\n        readableduration = \"0\"\n    }\n    msg.years = years\n    msg.weeks = weeks\n    msg.days = days\n    msg.hours = hours\n    msg.minutes = minutes\n    msg.seconds = seconds\n    msg.millis = millis\n    msg.payload = readableduration\n    return msg;","outputs":1,"noerr":0,"x":420,"y":580,"wires":[["533989e6.19aa38"]]},{"id":"5117f3ab.9484cc","type":"switch","z":"711cdb94.5b9a04","name":"Ping Status","property":"payload","propertyType":"msg","rules":[{"t":"false"},{"t":"lt","v":"goodbad","vt":"msg"},{"t":"gte","v":"goodbad","vt":"msg"}],"checkall":"false","repair":false,"outputs":3,"x":150,"y":100,"wires":[["cd0652f2.24c1b"],["286de803.dcf568"],["3716f3a5.c360dc"]]},{"id":"45d73ffd.6779d","type":"join","z":"711cdb94.5b9a04","name":"Assemble all columns and then send to Gsheet","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":847,"y":500,"wires":[["159589d9.1135c6"]]},{"id":"8a0a15c8.5a92d8","type":"change","z":"711cdb94.5b9a04","name":"Build Column A data","rules":[{"t":"set","p":"payload","pt":"msg","to":"Outage","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":500,"wires":[["45d73ffd.6779d","faa029b5.b65c28"]]},{"id":"faa029b5.b65c28","type":"simpletime","z":"711cdb94.5b9a04","name":"Populate Time Messages","x":150,"y":540,"wires":[["88071c08.c524"]]},{"id":"88071c08.c524","type":"change","z":"711cdb94.5b9a04","name":"Build Date/Time for Column B","rules":[{"t":"set","p":"payload","pt":"msg","to":"myyear\t&\"-\"&\tmymonthn\t&\"-\"&\tmydom\t&\" \"&\tmyhourpm\t&\":\"&\tmyminute\t&\":\"&\tmysecond\t&\".\"&\tmymillis\t&\" \"&\tmypm","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":540,"wires":[["45d73ffd.6779d","2a8bf2f.e6a000e"]]},{"id":"533989e6.19aa38","type":"change","z":"711cdb94.5b9a04","name":"Pass Duration for Column C and send complet to Join","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":620,"wires":[["45d73ffd.6779d"]]},{"id":"e6f86ef9.f3af6","type":"rbe","z":"76e3605b.0e6e7","name":"New Max?","func":"rbei","gap":"","start":"","inout":"out","property":"Max","x":850,"y":20,"wires":[["23c83a68.f57316"]]},{"id":"48434c5b.387c44","type":"rbe","z":"76e3605b.0e6e7","name":"New Min?","func":"rbei","gap":"","start":"","inout":"out","property":"Min","x":850,"y":60,"wires":[["23c83a68.f57316"]]},{"id":"f6c04470.d3df38","type":"inject","z":"2b2a4010.a6b5e","name":"Start Backup of All 4 Hubitat Hubs","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":220,"y":80,"wires":[["79bd7f0.4778b8"]]},{"id":"dae3700e.3752","type":"exec","z":"c3686304.f6d31","command":"/data/bashscripts/backup4hubitats.sh","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":290,"y":80,"wires":[["8061cf59.05783"],[],[]]},{"id":"8061cf59.05783","type":"debug","z":"c3686304.f6d31","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":250,"y":20,"wires":[]},{"id":"2808c99d.c92d26","type":"adv ping","z":"aba876af.3a45e8","name":"Ping the passed Host","host":"","x":360,"y":100,"wires":[["5992611c.d72ca","34f3f319.96490c"]]},{"id":"67721e37.f8a89","type":"inject","z":"54cae49c.6ee04c","name":"Turn Off Pinging","topic":"","payload":"stop","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":100,"wires":[["385c5512.c9ac4a"]]},{"id":"9d8367a6.55abe8","type":"inject","z":"54cae49c.6ee04c","name":"Start Pinging","topic":"","payload":"Ping","payloadType":"str","repeat":"","crontab":"","once":true,"onceDelay":"0","x":130,"y":60,"wires":[["385c5512.c9ac4a"]]},{"id":"81b5485a.3abc58","type":"function","z":"aba876af.3a45e8","name":"Start currentNum","func":"// check to see if the current number (currentNum is equal to the number of hosts being pinged (totalNum)\n    //when it is, reset the current number (currentNum) to the startinng number (startNum)\n    //when it is not, then increment the current number (currentNum)\n    //in both cases record the new value of the current number (currentNum) to the new value (flow.set.....)\nif (flow.get(\"currentNum\") == flow.get(\"totalNum\")){\n    flow.set(\"currentNum\", flow.get(\"startNum\"))\n}else {\n    flow.set(\"currentNum\", Number(flow.get(\"currentNum\"))+1)\n}\n/*\n*   Use the current number (cNum) as the index to get the other data for this round of pings\n*/\nvar cNum = flow.get(\"currentNum\")\n    //set ip address to be used by downstream\nmsg.host = flow.get(\"PT\"+cNum)\n    //set name to be used by downstream\nmsg.pingtarget = flow.get(\"PT\"+cNum+\"Name\")\n    //set target number to be used by downstream\nmsg.pingtargetnum = cNum\n    //set the dividing line between good and bad for the host to be pinged for use by downstream\nmsg.goodbad = flow.get(\"GoodBadPT\"+cNum)\n    //set a boolean for downstream to identify if the current target is an internet host or LAN host to be used by downstream\nmsg.internettarget = flow.get(\"InternetPT\"+cNum)\n    //show via status node which host will be pinged based on the latest output from this node\nnode.status({fill:\"green\",shape:\"dot\",text:\"Ping \"+ flow.get(\"PT\"+flow.get(\"currentNum\")+\"Name\")});\nreturn msg;\n\n/* Before refactoring\n\nif (flow.get(\"currentNum\") == flow.get(\"totalNum\")){\n    flow.set(\"currentNum\", flow.get(\"startNum\"))\n}else {\n    flow.set(\"currentNum\", Number(flow.get(\"currentNum\"))+1)\n}\nmsg.host = flow.get(\"PT\"+flow.get(\"currentNum\"))\nmsg.payload = flow.get(\"currentNum\")\nnode.status({fill:\"green\",shape:\"dot\",text:\"Ping \"+ flow.get(\"PT\"+flow.get(\"currentNum\")+\"Name\")});\nmsg.pingtarget = flow.get(\"PT\"+flow.get(\"currentNum\")+\"Name\")\nmsg.pingtargetnum = flow.get(\"currentNum\")\nmsg.goodbad = flow.get(\"GoodBadPT\"+flow.get(\"currentNum\"))\nmsg.internettarget = flow.get(\"InternetPT\"+flow.get(\"currentNum\"))\nreturn msg;\n*/","outputs":1,"noerr":0,"x":150,"y":100,"wires":[["2808c99d.c92d26"]]},{"id":"385c5512.c9ac4a","type":"trigger","z":"54cae49c.6ee04c","op1":"","op2":"0","op1type":"pay","op2type":"str","duration":"-1","extend":false,"units":"s","reset":"stop","bytopic":"all","name":"Send request every 1s unless turned off","x":460,"y":60,"wires":[["eb8fea44.7fab68"]]},{"id":"eb8fea44.7fab68","type":"subflow:aba876af.3a45e8","z":"54cae49c.6ee04c","name":"","env":[],"x":550,"y":100,"wires":[]},{"id":"3ab1249d.86543c","type":"config","z":"aba876af.3a45e8","name":"Config ping targets","properties":[{"p":"PT1Name","pt":"flow","to":"Central Services","tot":"str"},{"p":"PT1","pt":"flow","to":"192.168.86.3","tot":"str"},{"p":"PT2Name","pt":"flow","to":"Google Wifi","tot":"str"},{"p":"PT2","pt":"flow","to":"192.168.86.1","tot":"str"},{"p":"PT3Name","pt":"flow","to":"Emby","tot":"str"},{"p":"PT3","pt":"flow","to":"192.168.86.2","tot":"str"},{"p":"PT4Name","pt":"flow","to":"Lennox Themostat","tot":"str"},{"p":"PT4","pt":"flow","to":"192.168.86.101","tot":"str"},{"p":"PT5Name","pt":"flow","to":"AT&T router ","tot":"str"},{"p":"PT5","pt":"flow","to":"192.168.1.254","tot":"str"},{"p":"PT6Name","pt":"flow","to":"Cloudflare ","tot":"str"},{"p":"PT6","pt":"flow","to":"1.1.1.1","tot":"str"},{"p":"PT7Name","pt":"flow","to":"Level 3","tot":"str"},{"p":"PT7","pt":"flow","to":"4.2.2.2","tot":"str"},{"p":"PT8Name","pt":"flow","to":"Google","tot":"str"},{"p":"PT8","pt":"flow","to":"8.8.8.8","tot":"str"},{"p":"PT9Name","pt":"flow","to":"OpenDNS","tot":"str"},{"p":"PT9","pt":"flow","to":"208.67.222.222","tot":"str"},{"p":"PT10Name","pt":"flow","to":"dfw25 (near google hosted)","tot":"str"},{"p":"PT10","pt":"flow","to":"172.217.9.147","tot":"str"},{"p":"PT11Name","pt":"flow","to":"ghs.googlehosted.com","tot":"str"},{"p":"PT11","pt":"flow","to":"172.217.9.179","tot":"str"},{"p":"startNum","pt":"flow","to":"1","tot":"str"},{"p":"totalNum","pt":"flow","to":"11","tot":"str"},{"p":"currentNum","pt":"flow","to":"","tot":"str"}],"active":true,"x":110,"y":140,"wires":[],"info":"Note: by having a config node in a subflow, this sets the flow variables for when the subflow is activated. There is no way to use the click ability of a config node in a subflow, but it does do the initial population of the variable each time the subflow is triggered. In this case because the subflow is triggered via 12 different outputs, each of the 12 is a different set of the same variables."},{"id":"ae97e491.065718","type":"config","z":"aba876af.3a45e8","name":"Config Good/Bad Dividing Lines by Ping Target","properties":[{"p":"GoodBadPT1","pt":"flow","to":"1","tot":"num"},{"p":"GoodBadPT2","pt":"flow","to":"500","tot":"num"},{"p":"GoodBadPT3","pt":"flow","to":"500","tot":"num"},{"p":"GoodBadPT4","pt":"flow","to":"4500","tot":"num"},{"p":"GoodBadPT5","pt":"flow","to":"2000","tot":"num"},{"p":"GoodBadPT6","pt":"flow","to":"1000","tot":"num"},{"p":"GoodBadPT7","pt":"flow","to":"1000","tot":"num"},{"p":"GoodBadPT8","pt":"flow","to":"1000","tot":"num"},{"p":"GoodBadPT9","pt":"flow","to":"1000","tot":"num"},{"p":"GoodBadPT10","pt":"flow","to":"1000","tot":"num"},{"p":"GoodBadPT11","pt":"flow","to":"1000","tot":"num"}],"active":true,"x":200,"y":180,"wires":[],"info":"Note: by having a config node in a subflow, this sets the flow variables for when the subflow is activated. There is no way to use the click ability of a config node in a subflow, but it does do the initial population of the variable each time the subflow is triggered. In this case because the subflow is triggered via 12 different outputs, each of the 12 is a different set of the same variables."},{"id":"cc5cceb1.282c3","type":"config","z":"aba876af.3a45e8","name":"Config If Target Counts toward down Internet Tracking","properties":[{"p":"InternetPT1","pt":"flow","to":"false","tot":"bool"},{"p":"InternetPT2","pt":"flow","to":"false","tot":"bool"},{"p":"InternetPT3","pt":"flow","to":"false","tot":"bool"},{"p":"InternetPT4","pt":"flow","to":"false","tot":"bool"},{"p":"InternetPT5","pt":"flow","to":"false","tot":"bool"},{"p":"InternetPT6","pt":"flow","to":"true","tot":"bool"},{"p":"InternetPT7","pt":"flow","to":"true","tot":"bool"},{"p":"InternetPT8","pt":"flow","to":"true","tot":"bool"},{"p":"InternetPT9","pt":"flow","to":"true","tot":"bool"},{"p":"InternetPT10","pt":"flow","to":"true","tot":"bool"},{"p":"InternetPT11","pt":"flow","to":"true","tot":"bool"}],"active":true,"x":220,"y":220,"wires":[],"info":"Note: by having a config node in a subflow, this sets the flow variables for when the subflow is activated. There is no way to use the click ability of a config node in a subflow, but it does do the initial population of the variable each time the subflow is triggered. In this case because the subflow is triggered via 12 different outputs, each of the 12 is a different set of the same variables."},{"id":"8c5abc2f.833c4","type":"GSheet","z":"aba876af.3a45e8","creds":"adb4e9b8.8beee8","method":"append","action":"","sheet":"1ZKNZWvcBqLcxkkFSrV9JN-BAeXiGoGrDjepUyD-S5Cs","cells":"Sheet1!A2:J1000","name":"","x":890,"y":340,"wires":[[]]},{"id":"36301876.b0d678","type":"function","z":"aba876af.3a45e8","name":"Examine messages for Internet vs host down","func":"// Conceptually the flow is keeping track of how many down internet hosts there are per the ping results.\n// This function does 2/3rds of that process whenever it is triggered. It is triggered when the ping status node recieves a false instead of a numeric quantity from the ping result.\n// The 3 things this funtion does are:\n//      1. increment the down count\n//      2. record the time/date the down count reached 6 (which indicates that all of the internet hosts did not reply to a ping)\n//      3. set the flow variable that the internet is down\n\nif (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    if(!isNaN(downCount)){\n        if(downCount<6){ //it would be better and more elegant to have something count the number of internet targets and pass that in, but for now it is just hardcoded to 6\n            downCount++\n            if(downCount == 6) {\n                flow.set(\"wentdownat\",Date.now())\n                flow.set(\"internetdown\", true)\n            }\n        }\n    }\n    flow.set(\"downcount\", downCount);\n    return msg;}\n    \n    /* Before refactor\n    if (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    if(!isNaN(downCount)){\n        if(downCount<6){ //it would be better and more elegant to have something count the number of internet targets and pass that in, but for now it is just hardcoded to 6\n            downCount++\n            if(downCount == 6) {\n                flow.set(\"wentdownat\",Date.now())\n                flow.set(\"internetdown\", true)\n            }\n        }\n        \n    }\n    flow.set(\"downcount\", downCount);\n    return msg;}\n    */","outputs":1,"noerr":0,"x":670,"y":20,"wires":[[]],"info":"This Node is triggered by a ping response of false (i.e. more than 5 seconds to respond and thus either the network or the target host is offline)\n\n * gets how many consecutive times the ping has shown as down\n * sets internet down as true\n * Makes sure the down count is a number (belt and suspenders that could almost certainly be removed\n * If it is not a number than nothing happens\n * If it is, the it checks to see if the number of down responses has reached 6. The 6 is how many internet hosts are being examined. I assume that if we reach 6 then it is the internet and not just one or more of the total hosts that are down. If it is already at 6 then the system is treating the internet as down aleady and no further action is required.\n * If it is less than 6, then the count is incremented\n * If incrementing it has now made the count 6, it then records (in epoch time) the time the count went from 5 to 6.\n * Finally it saves the count back into a flow variable.\n"},{"id":"a8e0ea25.6b4598","type":"function","z":"aba876af.3a45e8","name":"Time to report outage?","func":"// Conceptually the flow is keeping track of how many down internet hosts there are per the ping results.\n// This function does 1/4th of that process whenever it is triggered. It is triggered when the ping status node recieves a  numeric quantity from the ping result.\n// The 3 things this funtion does are:\n//      1. decrement the down count\n//      2. whenever the down count reaches 0 and the internet down boolean is true, then this means the internet is back up so then:\n//          a. set internet down boolean back to false\n//          b. record the time/date it came back up\n//          c. set the boolean that it is time to write the outage (to google sheet) to true\n//      3. set the flow variable that the internet is down\n\nif (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    var originalDownCount = downCount\n    flow.set(\"calculateandwriteoutage\",false)\n    if(!isNaN(downCount)){\n        if(downCount > 0){\n            downCount--\n            if(downCount === 0 && flow.get(\"internetdown\")) {\n                flow.set(\"internetdown\", false)\n                flow.set(\"cameupat\",Date.now())\n                flow.set(\"calculateandwriteoutage\",true)\n            }\n        }\n    }\n    flow.set(\"downcount\", downCount);\n//note a msg is passed along to the write to google portion of the flow only if the calculate and write outage boolean is true\n//by note returning a msg, that portion of the flow is otherwise not triggered\n    if(flow.get(\"calculateandwriteoutage\")){\n        return msg;\n    }\n}\n\n\n/*Before refactor\nif (msg.internettarget){\n    var downCount = flow.get(\"downcount\")\n    var originalDownCount = downCount\n    flow.set(\"calculateandwriteoutage\",false)\n    if(!isNaN(downCount)){\n        if(downCount > 0){\n            downCount--\n            if(downCount === 0 && flow.get(\"internetdown\")) {\n                flow.set(\"internetdown\", false)\n                flow.set(\"cameupat\",Date.now())\n                flow.set(\"calculateandwriteoutage\",true)\n            }\n        }\n    }\n    flow.set(\"downcount\", downCount);\n    if(flow.get(\"calculateandwriteoutage\")){\n        return msg;\n        \n    }\n}\n*/","outputs":1,"noerr":0,"x":740,"y":200,"wires":[["49386f9d.e406"]],"info":"This Node is triggered by a ping response of a number (i.e. between 1 and 4999 milliseconds for a ping response)\n\n * get how many nodes are down\n * save a copy of how many nodes are down\n * Set flow variable for whether to do a calculation and output to false by default\n * Makes sure the down count is a number (belt and suspenders that could almost certainly be removed)\n * Check if the count is greater than zero\n * If it is then decrement the count\n * check if the decremented count is 0 now and that the internetdown flag is true (this flag means the down count reached 6)\n * If it is, then the internet is up enough to then this record this as the time the internet came up and set the internetdown back to false and change the flag for whether to calculated and write the outage to Gsheet to true\n * Record the down count to the flow variable"},{"id":"e23234f9.e2e198","type":"switch","z":"aba876af.3a45e8","name":"","property":"pingtargetnum","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"},{"t":"eq","v":"5","vt":"str"},{"t":"eq","v":"6","vt":"str"},{"t":"eq","v":"7","vt":"str"},{"t":"eq","v":"8","vt":"str"},{"t":"eq","v":"9","vt":"str"},{"t":"eq","v":"10","vt":"str"},{"t":"eq","v":"11","vt":"str"},{"t":"eq","v":"12","vt":"str"}],"checkall":"false","repair":false,"outputs":12,"x":970,"y":100,"wires":[["3838a30d.96e3ec"],["fe23a693.782e18"],["1c3e1fb5.2eb41"],["2aa59192.460dde"],["86a51f60.f66ee"],["f5b3dcb3.7054e"],["1b3bd6d1.3f1d89"],["4192675e.f2a288"],["77eed45b.16a24c"],["f527a986.c0db98"],["7d4621ff.a0f4d"],["12c58136.35d53f"]]},{"id":"31ff04f7.29ffec","type":"function","z":"aba876af.3a45e8","name":"Calculate Duration of Outage","func":"//This function makes sure it should be doing the calculate, then calculates the duration of the outage turns of the calculate flag and sends on the duration\n//This calculation could probably be moved back to the Time to report outage? node\nif(flow.get(\"calculateandwriteoutage\")){\n    var duration = flow.get(\"cameupat\") - flow.get(\"wentdownat\")\n    flow.set(\"calculateandwriteoutage\",false)\n    msg.payload = duration\n    return msg;\n}","outputs":1,"noerr":0,"x":160,"y":380,"wires":[["a927b98b.7807d8"]]},{"id":"8fa076b9.4abe38","type":"change","z":"aba876af.3a45e8","name":"Set Ping Status Down","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Down","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":60,"wires":[["e23234f9.e2e198","36301876.b0d678"]]},{"id":"3838a30d.96e3ec","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","x":1190,"y":20,"wires":[]},{"id":"fe23a693.782e18","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":60,"wires":[]},{"id":"1c3e1fb5.2eb41","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":100,"wires":[]},{"id":"2aa59192.460dde","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":140,"wires":[]},{"id":"86a51f60.f66ee","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":180,"wires":[]},{"id":"f5b3dcb3.7054e","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":220,"wires":[]},{"id":"1b3bd6d1.3f1d89","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":260,"wires":[]},{"id":"4192675e.f2a288","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":300,"wires":[]},{"id":"77eed45b.16a24c","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":340,"wires":[]},{"id":"f527a986.c0db98","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":380,"wires":[]},{"id":"7d4621ff.a0f4d","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1190,"y":420,"wires":[]},{"id":"12c58136.35d53f","type":"subflow:76e3605b.0e6e7","z":"aba876af.3a45e8","name":"","x":1189,"y":460,"wires":[]},{"id":"121af4fc.20aceb","type":"change","z":"aba876af.3a45e8","name":"Set Ping Status Good","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Good","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":100,"wires":[["e23234f9.e2e198","a8e0ea25.6b4598","d9ed9f5c.50725"]]},{"id":"7eadecfd.6684c4","type":"change","z":"aba876af.3a45e8","name":"Set Ping Status Slow","rules":[{"t":"set","p":"PingStatus","pt":"msg","to":"Slow","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":140,"wires":[["e23234f9.e2e198","a8e0ea25.6b4598","d9ed9f5c.50725"]]},{"id":"a927b98b.7807d8","type":"function","z":"aba876af.3a45e8","name":"Translate Duration Function","func":"//This function translates a duration into a friendly person readable format\n/* \n * Create Variables\n * \n */\n        var milliseconds = msg.payload;\n        var years, weeks, days, hours, minutes, seconds, millis;\n    //creating 2 string versions of each of the durations that can be in the middle of a 1:01:01.001 duration \n    //minstr is the always 2 character one\n    //lminstr is the version that can be 1 or more characers that will be used when that part is the portion of the duration\n        var minstr, secstr, millistr, lminstr, lsecstr, lmillistr;\n        var whichcomponents, readableduration;\n\n/*\n * Calculate the numbers for the subcomponents\n * \n */\n    //by getting the remainder when dividing by 1000\n    //it leaves just the fraction of milliseconds\n        millis = milliseconds % 1000;\n    //the floor function drops the decimal portion\n    //returning the non fractional seconds\n        seconds = Math.floor(milliseconds / 1000);\n    //the floor function drops the decimal portion\n    //returning the non fractional minutes\n        minutes = Math.floor(seconds / 60);\n    //Once the minutes have been calculated, then\n    //the seconds is replaced with those seconds not\n    //accounted for by the minutes\n        seconds = seconds % 60;\n    //The same sequence as used for minutes/seconds\n    //then used to calulate minutes, hours, dayss, weeks, years\n\n        hours = Math.floor(minutes / 60);\n        minutes = minutes % 60;\n        days = Math.floor(hours / 24);\n        hours = hours % 24;\n        weeks = Math.floor(days / 7)\n        days = days % 7;\n        years = Math.floor(days / 365.25)\n        weeks = weeks % 52;\n\n/*\n * Put the subcomponents into msg payloads for easy access by later nodes\n *\n */\n        msg.years = years\n        msg.weeks = weeks\n        msg.days = days\n        msg.hours = hours\n        msg.minutes = minutes\n        msg.seconds = seconds\n        msg.millis = millis\n \n\n/*\n * create the string verssion for the subcomponents\n */\n    //milliseconds\n        lmillistr = millis.toString();\n        //put padding on the milliseconds so that 1 ms shows as .001 and not .1 when concatenated after a decimal\n            millistr = millis.toString().padStart(3, \"0\");\n    //seconds\n        lsecstr = seconds.toString();\n        //put padding on the seconds so that 1 s shows as :01.000 and not :1.000 when concatenated after a dividing :\n            secstr = lsecstr.padStart(2, \"0\");\n    //minutes\n        lminstr = minutes.toString();\n        //put padding on the minutes so that 1 m shows as :01:00.000 and not :1:00.000 when concatenated after a dividing :\n            minstr = lminstr.padStart(2, \"0\");\n\n/*\n * Build output based on largest significant populated unit\n * The general rule is to include in the output the largest unit (years, weeks, days, etc) followed by the next 2\n * smaller units if the happen to be populated\n */\n    readableduration =\"\"\n//years populated\n    if (years !== 0) { \n        if (days !== 0) {\n            if (days === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(weeks.toString(), \" Week\", readableduration)\n            } else {\n                readableduration = \" \".concat(weeks.toString(), \" Weeks\", readableduration)\n            }\n        }\n        if (years === 1) {\n            readableduration = years.toString().concat(\" Year\", readableduration)\n        } else {\n            readableduration = years.toString().concat(\" Years\", readableduration)\n        }\n//weeks populated\n    } else if (weeks !== 0) {\n        if (hours !== 0) {\n            if (hours === 1) {\n                readableduration = \" \".concat(hours.toString(), \" Hour\", readableduration)\n            } else {\n                readableduration = \" \".concat(hours.toString(), \" Hours\", readableduration)\n            }\n        }\n        if (days !== 0) {\n            if (weeks === 1) {\n                readableduration = \" \".concat(days.toString(), \" Day\", readableduration)\n            } else {\n                readableduration = \" \".concat(days.toString(), \" Days\", readableduration)\n            }\n        }\n        if (weeks === 1) {\n            readableduration = weeks.toString().concat(\" Week\", readableduration)\n        } else {\n            readableduration = weeks.toString().concat(\" Weeks\", readableduration)\n        }\n//days populated\n    } else if (days !== 0) {\n        if ((minutes !== 0) && (hours !== 0)) { //If both are non-zero then 1:01 format. If only 1 then either 2 hours or 1 minute\n            if (minutes !== 0) {\n                readableduration = \":\".concat(minstr, readableduration)\n            }\n            if (hours !== 0) {\n                readableduration = \" \".concat(hours.toString(), readableduration)\n            } else {\n                readableduration = \" 0\".concat(readableduration)\n            }\n        } else {\n            if (minutes === 1) {\n                readableduration = \" 1 Minute\".concat(readableduration)\n            } else if (minutes > 1) {\n                readableduration = \" \".concat(lminstr,\" Minutes\", readableduration)\n            } else if (hours === 1) {\n                readableduration = \" 1 Hour\".concat(readableduration)\n            } else {\n                if (hours >1) {\n                    readableduration = \" \".concat(hours.toString(),\" Hours\", readableduration)\n                }\n            }\n        }\n        if (days === 1) {\n            readableduration = days.toString().concat(\" Day\", readableduration)\n        } else {\n            readableduration = days.toString().concat(\" Days\", readableduration)\n        }\n//hours populated\n    } else if (hours !== 0) {\n        if ((minutes !== 0) || (seconds !== 0)) { //End result h Hours or h:mm:ss\n            readableduration = hours.toString().concat(\":\", minstr, \":\", secstr, readableduration)\n        } else {\n            if (hours === 1) {\n                readableduration = \"1 Hour\"\n            } else {\n                readableduration = hours.toString().concat(\" Hours\", readableduration)\n            }\n        }\n//minutes populated\n    } else if (minutes !== 0) { //End result m Minutes or mm:ss.MMM\n        if (seconds !== 0 || millis !== 0) { //End result h Hours or h:mm:ss\n            readableduration = lminstr.concat(\":\", secstr, \".\", millistr, readableduration)\n        } else {\n            if (minutes === 1) {\n                readableduration = \"1 Minute\".concat( readableduration)\n            } else {\n                readableduration = lminstr.concat(\" Minutes\", readableduration)\n            }\n        }\n//seconds populated\n    } else if (seconds !== 0) {\n        if (millis !== 0) { //End result s Seconds or s.MMM\n            readableduration = lsecstr.concat(\".\", millistr, \" Seconds\", readableduration)\n        } else {\n            if (seconds === 1) {\n                readableduration = \"1 Second\".concat( readableduration)\n            } else {\n                readableduration = lsecstr.concat(\" Seconds\", readableduration)\n            }\n        }\n//milliseconds populated\n    } else if (millis !== 0) {\n        if (millis !== 1) {\n            readableduration = lmillistr.concat(\" Milliseconds\", readableduration)\n        } else {\n            readableduration = \"1 Millisecond\".concat( readableduration)\n        }\n    } else {\n        readableduration = \"0\"\n    }\n    msg.years = years\n    msg.weeks = weeks\n    msg.days = days\n    msg.hours = hours\n    msg.minutes = minutes\n    msg.seconds = seconds\n    msg.millis = millis\n    msg.payload = readableduration\n    return msg;","outputs":1,"noerr":0,"x":420,"y":380,"wires":[["10b233e9.17db8c"]]},{"id":"5992611c.d72ca","type":"switch","z":"aba876af.3a45e8","name":"Ping Status","property":"payload","propertyType":"msg","rules":[{"t":"false"},{"t":"lt","v":"goodbad","vt":"msg"},{"t":"gte","v":"goodbad","vt":"msg"}],"checkall":"false","repair":false,"outputs":3,"x":550,"y":100,"wires":[["8fa076b9.4abe38"],["121af4fc.20aceb"],["7eadecfd.6684c4"]]},{"id":"de3cd25d.34a83","type":"join","z":"aba876af.3a45e8","name":"Assemble all columns and then send to Gsheet","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":800,"y":280,"wires":[["8c5abc2f.833c4"]]},{"id":"49386f9d.e406","type":"change","z":"aba876af.3a45e8","name":"Build Column A data","rules":[{"t":"set","p":"payload","pt":"msg","to":"Outage","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":140,"y":280,"wires":[["de3cd25d.34a83","9aa9821b.c03f1"]]},{"id":"9aa9821b.c03f1","type":"simpletime","z":"aba876af.3a45e8","name":"Populate Time Messages","x":150,"y":340,"wires":[["7e0f855b.bdf2dc"]]},{"id":"7e0f855b.bdf2dc","type":"change","z":"aba876af.3a45e8","name":"Build Date/Time for Column B","rules":[{"t":"set","p":"payload","pt":"msg","to":"myyear\t&\"-\"&\tmymonthn\t&\"-\"&\tmydom\t&\" \"&\tmyhourpm\t&\":\"&\tmyminute\t&\":\"&\tmysecond\t&\".\"&\tmymillis\t&\" \"&\tmypm","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":340,"wires":[["de3cd25d.34a83","31ff04f7.29ffec"]]},{"id":"10b233e9.17db8c","type":"change","z":"aba876af.3a45e8","name":"Pass Duration for Column C and send complet to Join","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":420,"wires":[["de3cd25d.34a83"]]},{"id":"79bd7f0.4778b8","type":"subflow:c3686304.f6d31","z":"2b2a4010.a6b5e","x":560,"y":80,"wires":[]},{"id":"4ba5918f.c183f","type":"comment","z":"54cae49c.6ee04c","name":"Ping 11 IP addresses","info":"This starts automatically but can be stopped via the Turn Off Pinging injection node.","x":140,"y":20,"wires":[]},{"id":"34f3f319.96490c","type":"function","z":"aba876af.3a45e8","name":"Format Internet UpDown for InfluxDB","func":"var targetIP = msg.topic\nvar targetName = msg.pingtarget\nvar pingresult = msg.payload\nif (msg.internettarget){\n    if (pingresult){\n        combinedObj = [\n            { Connected: true,\n            ConnectedNumeric: 1\n            },\n            {   TargetName: targetName,\n            TargetIPAddress: targetIP\n            }\n            ];\n            } else {\n                combinedObj = [\n                    { Connected: false,\n                    ConnectedNumeric: 0\n                    },\n                    {   TargetName: targetName,\n                    TargetIPAddress: targetIP\n                    }\n                    ];\n                    }\n                    msg.payload = combinedObj\n                    return msg;\n}\n","outputs":1,"noerr":0,"x":430,"y":600,"wires":[["eda2c0bf.ab20c"]]},{"id":"d9ed9f5c.50725","type":"function","z":"aba876af.3a45e8","name":"Prepare Ping Duration for InfluxDB","func":"var targetIP = msg.topic\nvar duration = msg.payload\nvar targetName = msg.pingtarget\nvar combinedObj;\ncombinedObj = [\n    {\n        RountripDuration: duration\n    },\n    {\n        TargetName: targetName,\n        TargetIPAddress: targetIP\n    }\n];\nmsg.payload = combinedObj\nreturn msg;","outputs":1,"noerr":0,"x":720,"y":520,"wires":[["eda2c0bf.ab20c"]]},{"id":"eda2c0bf.ab20c","type":"influxdb out","z":"aba876af.3a45e8","influxdb":"430b7850.44c1a8","name":"","measurement":"NetworkUptime","precision":"","retentionPolicy":"","x":1030,"y":600,"wires":[]}]